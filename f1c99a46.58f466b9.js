(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{171:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(1),o=n(10),r=(n(0),n(176)),i={id:"intro",title:"Continuous Integration"},s={id:"development-infrastructure/continuous-integration/intro",title:"Continuous Integration",description:"## Travis CI",source:"@site/../docs/development-infrastructure/continuous-integration/intro.md",permalink:"/open-developer-platform/docs/development-infrastructure/continuous-integration/intro",editUrl:"https://github.com/finos/open-developer-platform/edit/master/website/../docs/development-infrastructure/continuous-integration/intro.md",sidebar:"mainSidebar",previous:{title:"Project collaboration",permalink:"/open-developer-platform/docs/project-collaboration"},next:{title:"Clojure",permalink:"/open-developer-platform/docs/development-infrastructure/continuous-integration/clojure"}},c=[{value:"Travis CI",id:"travis-ci",children:[{value:"Continuous (artifact) deployment in Java",id:"continuous-artifact-deployment-in-java",children:[]},{value:"Continuous release in Python",id:"continuous-release-in-python",children:[]},{value:"Continuous release in NodeJS",id:"continuous-release-in-nodejs",children:[]},{value:"Example of Configuring Integration Testing",id:"example-of-configuring-integration-testing",children:[]}]},{value:"MyGet",id:"myget",children:[]}],l={rightToc:c};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"travis-ci"},"Travis CI"),Object(r.b)("p",null,"Travis CI is a hosted, distributed continuous integration service used to build and test software projects hosted at GitHub."),Object(r.b)("p",null,"To enable Travis CI on a Foundation hosted project:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://travis-ci.org/"}),"Sign in to Travis CI")," with your Github credentials"),Object(r.b)("li",{parentName:"ol"},"Access the ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://travis-ci.org/profile/symphonyoss"}),"Travis CI profile")," and sync your project"),Object(r.b)("li",{parentName:"ol"},"Add a ",Object(r.b)("inlineCode",{parentName:"li"},".travis.yml")," file in the root folder of your GitHub repo (check this ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/symphonyoss/ssf-parent-pom/blob/master/.travis.yml"}),".travis.yml")," as example)\na. (optional) If you need to perform variable encryption and other useful commands, install the ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/travis-ci/travis.rb"}),"Travis CI Client")," (using ",Object(r.b)("inlineCode",{parentName:"li"},"gem install travis"),")"),Object(r.b)("li",{parentName:"ol"},"Access ",Object(r.b)("inlineCode",{parentName:"li"},"https://travis-ci.org/<program name>/<repository-name>")," and validate the build")),Object(r.b)("p",null,"Please check the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.travis-ci.com/user/languages/"}),"Travis supported languages")," and how to ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.travis-ci.com/user/customizing-the-build"}),"customize your build")," to understand if your language is supported and how to configure additional build features."),Object(r.b)("p",null,"A badge can be added at the top of the project's root-level ",Object(r.b)("inlineCode",{parentName:"p"},"README.md")," file, using the following Markdown syntax:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"[![Build Status](https://travis-ci.org/<program name>/<repository name>.svg)](https://travis-ci.org/<program name>/<repository name>)\n")),Object(r.b)("h3",{id:"continuous-artifact-deployment-in-java"},"Continuous (artifact) deployment in Java"),Object(r.b)("p",null,"When using Java, Travis CI can be easily configured to publish new snapshot artifacts on commit; to enable this feature, a project committer can follow these simple steps:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Follow the Java Snapshot deployment configuration ; as a result, you should have username/password credentials (mentioned below as ",Object(r.b)("inlineCode",{parentName:"li"},"CI_DEPLOY_USERNAME")," and ",Object(r.b)("inlineCode",{parentName:"li"},"CI_DEPLOY_PASSWORD"),") to access issues.sonatype.org"),Object(r.b)("li",{parentName:"ol"},"Email help@finos.org to request permission to deploy artifacts on Maven remote repositories; this action is not required if the developer has already been granted access previously"),Object(r.b)("li",{parentName:"ol"},"Commit a ",Object(r.b)("inlineCode",{parentName:"li"},"settings.xml")," file in the project root folder"),Object(r.b)("li",{parentName:"ol"},"Define ",Object(r.b)("inlineCode",{parentName:"li"},"CI_DEPLOY_USERNAME")," and ",Object(r.b)("inlineCode",{parentName:"li"},"CI_DEPLOY_PASSWORD")," variables with Travis CI; make sure that they're encrypted and hidden during the build process; the credentials to use are the ones defined on step 1; if you don't want to share your username/password credentials, you can request and use Nexus tokens"),Object(r.b)("li",{parentName:"ol"},"Change the ",Object(r.b)("inlineCode",{parentName:"li"},"mvn")," build command to\na. Invoke the ",Object(r.b)("inlineCode",{parentName:"li"},"deploy")," goal\nb. Append ",Object(r.b)("inlineCode",{parentName:"li"},"--settings settings.xml")," at the end of the build command")),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://coderwall.com/p/9b_lfq/deploying-maven-artifacts-from-travis"}),"This tutorial")," walks through the mentioned steps, with more details and configuration options; a working example of this configuration is the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/symphonyoss/symphony-java-sample-bots/blob/dev/.travis.yml"}),"symphony-java-sample-bots project"),"."),Object(r.b)("h4",{id:"settingsxml-sample"},"settings.xml sample"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),'<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">\n  <servers>\n    <server>\n      <id>ossrh</id>\n      <username>${env.CI_DEPLOY_USERNAME}</username>\n      <password>${env.CI_DEPLOY_PASSWORD}</password>\n    </server>\n  </servers>\n</settings>\n')),Object(r.b)("h3",{id:"continuous-release-in-python"},"Continuous release in Python"),Object(r.b)("p",null,"Travis CI can be configured to use ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"http://python-semantic-release.readthedocs.io/en/latest/"}),"python-semantic-release"),", a package that simplifies and automates versioning for python projects; a project lead can email help@finos.org to request Foundation staff to apply the proper Travis CI project settings; packages will be published on behalf of the FINOS pypi user."),Object(r.b)("h3",{id:"continuous-release-in-nodejs"},"Continuous release in NodeJS"),Object(r.b)("p",null,"Travis CI can easily publish packages to npm using ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"http://semantic-release.org/"}),"semantic-release.org"),", which delegates release operations to your CI environment and allows you to control versioning ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.npmjs.com/package/commitizen"}),"using commits (commitizen)"),"; as a result, npm packages will be continuously released on each code repository change."),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"javascript"}),"Follow our instructions")," on how to register a package and user in the Foundation npm organisation."),Object(r.b)("h3",{id:"example-of-configuring-integration-testing"},"Example of Configuring Integration Testing"),Object(r.b)("p",null,"In order to run this sample (some sample bots from the Symphony program), the Travis build needs to be configured to add the following items:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),'# Download certificate before the build script runs\nbefore_script: "curl -s https://raw.githubusercontent.com/symphonyoss/contrib-toolbox/master/scripts/download-files.sh | bash"\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"# Define environment variables with Symphony Pod endpoints\nenv:\n global:\n  - FOUNDATION_API_URL=https://foundation-dev-api.symphony.com\n  - FOUNDATION_POD_URL=https://foundation-dev.symphony.com\n  - SESSIONAUTH_URL=$FOUNDATION_API_URL/sessionauth\n  - KEYAUTH_URL=$FOUNDATION_API_URL/keyauth\n  - POD_URL=$FOUNDATION_POD_URL/pod\n  - AGENT_URL=$FOUNDATION_POD_URL/agent\n")),Object(r.b)("p",null,"At this point, the certificates are in place and downloaded into the build box; integration tests can resolve User Identity certificates by accessing environment variables."),Object(r.b)("p",null,"The ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/symphonyoss/symphony-java-sample-bots/"}),"symphony-java-sample-bots")," was amongst the first Foundation projects that was enabled to run integration tests from Travis CI; the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://travis-ci.org/symphonyoss/symphony-java-sample-bots/"}),"Travis build logs")," for this project show the info below."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The (hidden) environment variables that identify User Identity certificates (in this case 2, one for the message sender, one for the message receiver)")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"# Setting environment variables from repository settings\n$ export DOWNLOAD_PATH=[secure]\n$ export DOWNLOAD_ITEMS=[secure]\n$ export TRUSTSTORE_FILE=[secure]\n$ export TRUSTSTORE_PASSWORD=[secure]\n$ export BOT_USER_EMAIL=[secure]\n$ export BOT_USER_CERT_FILE=[secure]\n$ export SENDER_USER_EMAIL=[secure]\n$ export SENDER_USER_CERT_FILE=[secure]\n$ export DOWNLOAD_HOST=[secure]\n$ export SENDER_USER_CERT_PASSWORD=[secure]\n$ export BOT_USER_CERT_PASSWORD=[secure]\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The integration test logs of a successful run")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"-------------------------------------------------------\n T E S T S\n-------------------------------------------------------\nRunning org.symphonyoss.simplebot.EchoBotIT\nchat initialised\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.132 sec - in org.symphonyoss.simplebot.EchoBotIT\n \nResults :\n \nTests run: 1, Failures: 0, Errors: 0, Skipped: 0\n")),Object(r.b)("h4",{id:"known-certificate-issues"},"Known Certificate Issues"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Caused by: javax.crypto.BadPaddingException: Given final block not properly padded at\norg.symphonyoss.simplebot.EchoBotIT.sendAndReceiveEcho(EchoBotIT.java:64)\n")),Object(r.b)("p",null,"This basically means that the certificate password is wrong; to validate the certificate using the following command:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"openssl pkcs12 -info -nodes \\\n-in <certificate_path> \\\n-passin pass:<certificate_password>\n")),Object(r.b)("p",null,"Reminder for Foundation staff: every password symbol must be escaped by prefixing it with character \u2018\\\u2019, before setting it as Travis environment variable."),Object(r.b)("h4",{id:"branch-specific-build-commands"},"Branch specific build commands"),Object(r.b)("p",null,"Travis CI does not provide a syntax to specify branch-specific build commands; however, it is possible to use the following ",Object(r.b)("inlineCode",{parentName:"p"},".travis.yml")," syntax to workaround it; in this example, the Maven build will use the ",Object(r.b)("inlineCode",{parentName:"p"},"sonar")," profile only if the current branch is master."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),'script:\n- "[[ $TRAVIS_BRANCH =~ master ]] && mvn clean deploy -Pintegration-testing,sonar --settings settings.xml"\n- "[[ $TRAVIS_BRANCH =~ dev ]] && mvn clean deploy -Pintegration-testing --settings settings.xml"\n')),Object(r.b)("h2",{id:"myget"},"MyGet"),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"http://myget.org/"}),"Myget")," is a friction-free continuous integration & delivery for your nuget, npm, bower and vsix packages; the Foundation provides package repositories, which allow:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Pre-release build and publishing"),", using build environments that are equipped with .NET Framework and Visual Studio (headless); it also features source code tagging and version updates on source code based on incremental build number, to fully automate the package publishing pipeline"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Sync with NuGet"),", that can be either manual (promoting pre-releases to releases using MyGet web interface) or automatic (a committer must create a personal account on MyGet and request access from the Foundation in order to be able to push packages)")),Object(r.b)("p",null,"In order to request a project to be integrated with MyGet, a Project lead can sign up to MyGet and email help@finos.org the following info:\n1. Project coordinates - GitHub project url and other useful info\n2. MyGet username\n3. CSProj and CS files - Where project descriptors are located\n4. Packages - A list of the packages that need to be published; by default all packages are taken into account\n5. Publishing strategy to NuGet - Whether to enable automatic publishing based on source code branching or rely on manual package pushing using the MyGet interface; if the latter, a MyGet personal account username must be provided"),Object(r.b)("p",null,"An example of project building with MyGet is the Symphony ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://symphonyoss.atlassian.net/wiki/github.com/symphonyoss/RestApiClient"}),"RestApiClient project"),", which is also published on the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.myget.org/feed/ssf-restapiclient/package/nuget/SymphonyOSS.RestApiClient"}),"FINOS MyGet repository")," and ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.nuget.org/packages/SymphonyOSS.RestApiClient/"}),"NuGet"),"."),Object(r.b)("p",null,"Badges can be added at the top of the project's root-level ",Object(r.b)("inlineCode",{parentName:"p"},"README.md")," file, using the following Markdown syntax:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Build status: ")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"[![MyGet Build Status](https://www.myget.org/BuildSource/Badge/<feed name>?identifier=<guid>)](https://www.myget.org/feed/<feed name>/package/nuget/<package name>)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Latest Pre-Release package published: ")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"[![MyGet Pre Release](https://img.shields.io/myget/<feed name>/v/<package name>.svg)](https://www.myget.org/feed/<feed name>/package/nuget/<package name>)\n")))}p.isMDXComponent=!0},176:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},b=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(n),d=a,m=b["".concat(i,".").concat(d)]||b[d]||u[d]||r;return n?o.a.createElement(m,s({ref:t},l,{components:n})):o.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);
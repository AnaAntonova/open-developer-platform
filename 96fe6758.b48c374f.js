(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{168:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return u}));var n=a(1),i=a(11),o=(a(0),a(185)),r=a(187),s={id:"intro",title:"Continuous Integration"},c={id:"development-infrastructure/continuous-integration/intro",title:"Continuous Integration",description:"import useBaseUrl from '@docusaurus/useBaseUrl';",source:"@site/../docs/development-infrastructure/continuous-integration/intro.mdx",permalink:"/docs/development-infrastructure/continuous-integration/intro",editUrl:"https://github.com/finos/open-developer-platform/edit/master/website/../docs/development-infrastructure/continuous-integration/intro.mdx",sidebar:"mainSidebar",previous:{title:"Project collaboration",permalink:"/docs/project-collaboration"},next:{title:"Clojure",permalink:"/docs/development-infrastructure/continuous-integration/clojure"}},l=[{value:"GitHub Actions",id:"github-actions",children:[]},{value:"Travis CI",id:"travis-ci",children:[{value:"Continuous (artifact) deployment in Java",id:"continuous-artifact-deployment-in-java",children:[]},{value:"Continuous release in Python",id:"continuous-release-in-python",children:[]},{value:"Continuous release in NodeJS",id:"continuous-release-in-nodejs",children:[]},{value:"Example of Configuring Integration Testing",id:"example-of-configuring-integration-testing",children:[]}]},{value:"Azure Pipelines",id:"azure-pipelines",children:[]},{value:"MyGet",id:"myget",children:[]}],p={rightToc:l};function u(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(o.a)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(o.a)("h2",{id:"github-actions"},"GitHub Actions"),Object(o.a)("p",null,"GitHub gives the ability to create, reuse and share actions, which can be easily described as workloads that can be triggered on a wide range of events."),Object(o.a)("p",null,"Actions can be only defined at repository level, creating a ",Object(o.a)("inlineCode",{parentName:"p"},"YAML")," file in the ",Object(o.a)("inlineCode",{parentName:"p"},".github/workflows")," folder. The ",Object(o.a)("inlineCode",{parentName:"p"},"Actions")," tab available in ",Object(o.a)("inlineCode",{parentName:"p"},"github.com")," web UI will list the actions defined and show the execution logs."),Object(o.a)("p",null,"The Open Developer Platform uses GitHub Actions for the following use cases:"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},Object(o.a)("a",{href:Object(r.a)("docs/development-infrastructure/project-documentation")},"Building and publishing Project websites")),Object(o.a)("li",{parentName:"ul"},Object(o.a)("a",{href:Object(r.a)("docs/project-collaboration")},"Tracking meeting attendance")),Object(o.a)("li",{parentName:"ul"},Object(o.a)("a",{href:"https://github.com/finos/open-developer-platform/blob/master/.github/workflows/project-blueprint.yml"},"Validating repository compliance (work in progress)"))),Object(o.a)("p",null,"To learn how to use GitHub Actions, start reading ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://help.github.com/en/actions"}),"https://help.github.com/en/actions"),".\nWhen it's time to start writing your first ",Object(o.a)("inlineCode",{parentName:"p"},".yml")," file, we found extremely helpful the following resources:"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},Object(o.a)("a",Object(n.a)({parentName:"li"},{href:"https://help.github.com/en/actions/configuring-and-managing-workflows/authenticating-with-the-github_token#using-the-github_token-in-a-workflow"}),"Using the GITHUB_TOKEN in a workflow")),Object(o.a)("li",{parentName:"ul"},Object(o.a)("a",Object(n.a)({parentName:"li"},{href:"https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions"}),"Context and expression syntax")),Object(o.a)("li",{parentName:"ul"},Object(o.a)("a",Object(n.a)({parentName:"li"},{href:"https://developer.github.com/v3/activity/events/types/"}),"Event Types & Payloads"))),Object(o.a)("h2",{id:"travis-ci"},"Travis CI"),Object(o.a)("p",null,"Travis CI is a hosted, distributed continuous integration service used to build and test software projects hosted at GitHub."),Object(o.a)("p",null,"To enable Travis CI on a Foundation hosted project:"),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},Object(o.a)("a",Object(n.a)({parentName:"li"},{href:"https://travis-ci.org/"}),"Sign in to Travis CI")," with your Github credentials"),Object(o.a)("li",{parentName:"ol"},"Access the ",Object(o.a)("a",Object(n.a)({parentName:"li"},{href:"https://travis-ci.org/profile/symphonyoss"}),"Travis CI profile")," and sync your project"),Object(o.a)("li",{parentName:"ol"},"Add a ",Object(o.a)("inlineCode",{parentName:"li"},".travis.yml")," file in the root folder of your GitHub repo (check this ",Object(o.a)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/finos/finos-parent-pom/blob/master/.travis.yml"}),".travis.yml")," as example)\na. (optional) If you need to perform variable encryption and other useful commands, install the ",Object(o.a)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/travis-ci/travis.rb"}),"Travis CI Client")," (using ",Object(o.a)("inlineCode",{parentName:"li"},"gem install travis"),")"),Object(o.a)("li",{parentName:"ol"},"Access ",Object(o.a)("inlineCode",{parentName:"li"},"https://travis-ci.org/<program name>/<repository-name>")," and validate the build")),Object(o.a)("p",null,"Please check the ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://docs.travis-ci.com/user/languages/"}),"Travis supported languages")," and how to ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://docs.travis-ci.com/user/customizing-the-build"}),"customize your build")," to understand if your language is supported and how to configure additional build features."),Object(o.a)("p",null,"A badge can be added at the top of the project's root-level ",Object(o.a)("inlineCode",{parentName:"p"},"README.md")," file, using the following Markdown syntax:"),Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{}),"[![Build Status](https://travis-ci.org/<program name>/<repository name>.svg)](https://travis-ci.org/<program name>/<repository name>)\n")),Object(o.a)("h3",{id:"continuous-artifact-deployment-in-java"},"Continuous (artifact) deployment in Java"),Object(o.a)("p",null,"When using Java, Travis CI can be easily configured to publish new snapshot artifacts on commit; to enable this feature, a project committer can follow these simple steps:"),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},"Follow the Java Snapshot deployment configuration ; as a result, you should have username/password credentials (mentioned below as ",Object(o.a)("inlineCode",{parentName:"li"},"CI_DEPLOY_USERNAME")," and ",Object(o.a)("inlineCode",{parentName:"li"},"CI_DEPLOY_PASSWORD"),") to access issues.sonatype.org"),Object(o.a)("li",{parentName:"ol"},"Email ",Object(o.a)("a",Object(n.a)({parentName:"li"},{href:"mailto:help@finos.org"}),"help@finos.org")," to request permission to deploy artifacts on Maven remote repositories; this action is not required if the developer has already been granted access previously"),Object(o.a)("li",{parentName:"ol"},"Commit a ",Object(o.a)("inlineCode",{parentName:"li"},"settings.xml")," file in the project root folder"),Object(o.a)("li",{parentName:"ol"},"Define ",Object(o.a)("inlineCode",{parentName:"li"},"CI_DEPLOY_USERNAME")," and ",Object(o.a)("inlineCode",{parentName:"li"},"CI_DEPLOY_PASSWORD")," variables with Travis CI; make sure that they're encrypted and hidden during the build process; the credentials to use are the ones defined on step 1; if you don't want to share your username/password credentials, you can request and use Nexus tokens"),Object(o.a)("li",{parentName:"ol"},"Change the ",Object(o.a)("inlineCode",{parentName:"li"},"mvn")," build command to\na. Invoke the ",Object(o.a)("inlineCode",{parentName:"li"},"deploy")," goal\nb. Append ",Object(o.a)("inlineCode",{parentName:"li"},"--settings settings.xml")," at the end of the build command")),Object(o.a)("p",null,Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://coderwall.com/p/9b_lfq/deploying-maven-artifacts-from-travis"}),"This tutorial")," walks through the mentioned steps, with more details and configuration options; a working example of this configuration is the ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/symphonyoss/symphony-java-sample-bots/blob/dev/.travis.yml"}),"symphony-java-sample-bots project"),"."),Object(o.a)("h4",{id:"settingsxml-sample"},"settings.xml sample"),Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{}),'<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">\n  <servers>\n    <server>\n      <id>ossrh</id>\n      <username>${env.CI_DEPLOY_USERNAME}</username>\n      <password>${env.CI_DEPLOY_PASSWORD}</password>\n    </server>\n  </servers>\n</settings>\n')),Object(o.a)("h3",{id:"continuous-release-in-python"},"Continuous release in Python"),Object(o.a)("p",null,"Travis CI can be configured to use ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"http://python-semantic-release.readthedocs.io/en/latest/"}),"python-semantic-release"),", a package that simplifies and automates versioning for python projects; a project lead can email ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"mailto:help@finos.org"}),"help@finos.org")," to request Foundation staff to apply the proper Travis CI project settings; packages will be published on behalf of the FINOS pypi user."),Object(o.a)("h3",{id:"continuous-release-in-nodejs"},"Continuous release in NodeJS"),Object(o.a)("p",null,"Travis CI can easily publish packages to npm using ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"http://semantic-release.org/"}),"semantic-release.org"),", which delegates release operations to your CI environment and allows you to control versioning ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://www.npmjs.com/package/commitizen"}),"using commits (commitizen)"),"; as a result, npm packages will be continuously released on each code repository change."),Object(o.a)("p",null,Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"javascript"}),"Follow our instructions")," on how to register a package and user in the Foundation npm organisation."),Object(o.a)("h3",{id:"example-of-configuring-integration-testing"},"Example of Configuring Integration Testing"),Object(o.a)("p",null,"In order to run this sample (some sample bots from the Symphony program), the Travis build needs to be configured to add the following items:"),Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{}),'# Download certificate before the build script runs\nbefore_script: "curl -s https://raw.githubusercontent.com/symphonyoss/contrib-toolbox/master/scripts/download-files.sh | bash"\n')),Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{}),"# Define environment variables with Symphony Pod endpoints\nenv:\n global:\n  - FOUNDATION_API_URL=https://foundation-dev-api.symphony.com\n  - FOUNDATION_POD_URL=https://foundation-dev.symphony.com\n  - SESSIONAUTH_URL=$FOUNDATION_API_URL/sessionauth\n  - KEYAUTH_URL=$FOUNDATION_API_URL/keyauth\n  - POD_URL=$FOUNDATION_POD_URL/pod\n  - AGENT_URL=$FOUNDATION_POD_URL/agent\n")),Object(o.a)("p",null,"At this point, the certificates are in place and downloaded into the build box; integration tests can resolve User Identity certificates by accessing environment variables."),Object(o.a)("p",null,"The ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/symphonyoss/symphony-java-sample-bots/"}),"symphony-java-sample-bots")," was amongst the first Foundation projects that was enabled to run integration tests from Travis CI; the ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://travis-ci.org/symphonyoss/symphony-java-sample-bots/"}),"Travis build logs")," for this project show the info below."),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},"The (hidden) environment variables that identify User Identity certificates (in this case 2, one for the message sender, one for the message receiver)")),Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{}),"# Setting environment variables from repository settings\n$ export DOWNLOAD_PATH=[secure]\n$ export DOWNLOAD_ITEMS=[secure]\n$ export TRUSTSTORE_FILE=[secure]\n$ export TRUSTSTORE_PASSWORD=[secure]\n$ export BOT_USER_EMAIL=[secure]\n$ export BOT_USER_CERT_FILE=[secure]\n$ export SENDER_USER_EMAIL=[secure]\n$ export SENDER_USER_CERT_FILE=[secure]\n$ export DOWNLOAD_HOST=[secure]\n$ export SENDER_USER_CERT_PASSWORD=[secure]\n$ export BOT_USER_CERT_PASSWORD=[secure]\n")),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},"The integration test logs of a successful run")),Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{}),"-------------------------------------------------------\n T E S T S\n-------------------------------------------------------\nRunning org.symphonyoss.simplebot.EchoBotIT\nchat initialised\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.132 sec - in org.symphonyoss.simplebot.EchoBotIT\n \nResults :\n \nTests run: 1, Failures: 0, Errors: 0, Skipped: 0\n")),Object(o.a)("h4",{id:"known-certificate-issues"},"Known Certificate Issues"),Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{}),"Caused by: javax.crypto.BadPaddingException: Given final block not properly padded at\norg.symphonyoss.simplebot.EchoBotIT.sendAndReceiveEcho(EchoBotIT.java:64)\n")),Object(o.a)("p",null,"This basically means that the certificate password is wrong; to validate the certificate using the following command:"),Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{}),"openssl pkcs12 -info -nodes \\\n-in <certificate_path> \\\n-passin pass:<certificate_password>\n")),Object(o.a)("p",null,"Reminder for Foundation staff: every password symbol must be escaped by prefixing it with character \u2018\\\u2019, before setting it as Travis environment variable."),Object(o.a)("h4",{id:"branch-specific-build-commands"},"Branch specific build commands"),Object(o.a)("p",null,"Travis CI does not provide a syntax to specify branch-specific build commands; however, it is possible to use the following ",Object(o.a)("inlineCode",{parentName:"p"},".travis.yml")," syntax to workaround it; in this example, the Maven build will use the ",Object(o.a)("inlineCode",{parentName:"p"},"sonar")," profile only if the current branch is master."),Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{}),'script:\n- "[[ $TRAVIS_BRANCH =~ master ]] && mvn clean deploy -Pintegration-testing,sonar --settings settings.xml"\n- "[[ $TRAVIS_BRANCH =~ dev ]] && mvn clean deploy -Pintegration-testing --settings settings.xml"\n')),Object(o.a)("h2",{id:"azure-pipelines"},"Azure Pipelines"),Object(o.a)("p",null,"FINOS can provide projects with Azure Pipelines integration on ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://dev.azure.com/finosfoundation"}),"https://dev.azure.com/finosfoundation"),"."),Object(o.a)("p",null,"You can follow docs on the ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/azure/devops/pipelines/create-first-pipeline"}),"Microsoft docs page")),Object(o.a)("h2",{id:"myget"},"MyGet"),Object(o.a)("p",null,Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"http://myget.org/"}),"Myget")," is a friction-free continuous integration & delivery for your nuget, npm, bower and vsix packages; the Foundation provides package repositories, which allow:"),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},Object(o.a)("strong",{parentName:"li"},"Pre-release build and publishing"),", using build environments that are equipped with .NET Framework and Visual Studio (headless); it also features source code tagging and version updates on source code based on incremental build number, to fully automate the package publishing pipeline"),Object(o.a)("li",{parentName:"ol"},Object(o.a)("strong",{parentName:"li"},"Sync with NuGet"),", that can be either manual (promoting pre-releases to releases using MyGet web interface) or automatic (a committer must create a personal account on MyGet and request access from the Foundation in order to be able to push packages)")),Object(o.a)("p",null,"In order to request a project to be integrated with MyGet, a Project lead can sign up to MyGet and email ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"mailto:help@finos.org"}),"help@finos.org")," the following info:\n1. Project coordinates - GitHub project url and other useful info\n2. MyGet username\n3. CSProj and CS files - Where project descriptors are located\n4. Packages - A list of the packages that need to be published; by default all packages are taken into account\n5. Publishing strategy to NuGet - Whether to enable automatic publishing based on source code branching or rely on manual package pushing using the MyGet interface; if the latter, a MyGet personal account username must be provided"),Object(o.a)("p",null,"An example of project building with MyGet is the Symphony ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://symphonyoss.atlassian.net/wiki/github.com/symphonyoss/RestApiClient"}),"RestApiClient project"),", which is also published on the ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://www.myget.org/feed/ssf-restapiclient/package/nuget/SymphonyOSS.RestApiClient"}),"FINOS MyGet repository")," and ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://www.nuget.org/packages/SymphonyOSS.RestApiClient/"}),"NuGet"),"."),Object(o.a)("p",null,"Badges can be added at the top of the project's root-level ",Object(o.a)("inlineCode",{parentName:"p"},"README.md")," file, using the following Markdown syntax:"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},"Build status: ")),Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{}),"[![MyGet Build Status](https://www.myget.org/BuildSource/Badge/<feed name>?identifier=<guid>)](https://www.myget.org/feed/<feed name>/package/nuget/<package name>)\n")),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},"Latest Pre-Release package published: ")),Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{}),"[![MyGet Pre Release](https://img.shields.io/myget/<feed name>/v/<package name>.svg)](https://www.myget.org/feed/<feed name>/package/nuget/<package name>)\n")))}u.isMDXComponent=!0},185:function(e,t,a){"use strict";a.d(t,"a",(function(){return b}));var n=a(0),i=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=i.a.createContext({}),p=function(e){var t=i.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s({},t,{},e)),a},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,r=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(a),b=n,h=d["".concat(r,".").concat(b)]||d[b]||u[b]||o;return a?i.a.createElement(h,s({ref:t},l,{components:a})):i.a.createElement(h,s({ref:t},l))}));function b(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,r=new Array(o);r[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,r[1]=s;for(var l=2;l<o;l++)r[l]=a[l];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},186:function(e,t,a){"use strict";var n=a(0),i=a(56);t.a=function(){return Object(n.useContext)(i.a)}},187:function(e,t,a){"use strict";a.d(t,"a",(function(){return i}));a(188);var n=a(186);function i(e){var t=(Object(n.a)().siteConfig||{}).baseUrl,a=void 0===t?"/":t;if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?a+e.slice(1):a+e}},188:function(e,t,a){"use strict";var n=a(5),i=a(15),o=a(189),r="".startsWith;n(n.P+n.F*a(190)("startsWith"),"String",{startsWith:function(e){var t=o(this,e,"startsWith"),a=i(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),n=String(e);return r?r.call(t,n,a):t.slice(a,a+n.length)===n}})},189:function(e,t,a){var n=a(80),i=a(22);e.exports=function(e,t,a){if(n(t))throw TypeError("String#"+a+" doesn't accept regex!");return String(i(e))}},190:function(e,t,a){var n=a(2)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(a){try{return t[n]=!1,!"/./"[e](t)}catch(i){}}return!0}}}]);